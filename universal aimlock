-- Place this script in StarterPlayerScripts or as a LocalScript.

local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local localPlayer = Players.LocalPlayer
local camera = workspace.CurrentCamera

local targetPlayer = nil
local camLockEnabled = false

-- Default keybind for camlock
local currentKeybind = Enum.KeyCode.T

-- FOV circle setup
local fovCircle = Drawing.new("Circle")
fovCircle.Color = Color3.new(1, 1, 1) -- White
fovCircle.Thickness = 2
fovCircle.Radius = 100 -- Adjust the radius as needed
fovCircle.Visible = true
fovCircle.Transparency = 1

-- GUI Setup (smaller version)
local gui = Instance.new("ScreenGui")
local frame = Instance.new("Frame")
local titleLabel = Instance.new("TextLabel")
local keybindTextLabel = Instance.new("TextLabel")
local keybindButton = Instance.new("TextButton")

gui.Name = "CamLockGui"
gui.Parent = game.CoreGui -- Parent to CoreGui so it shows in-game

frame.Name = "MainFrame"
frame.Size = UDim2.new(0, 200, 0, 100) -- Smaller size
frame.Position = UDim2.new(0.05, 0, 0.8, 0) -- Bottom-left corner
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 2
frame.Active = true
frame.Draggable = true
frame.Parent = gui

titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(1, 0, 0.3, 0)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.Text = "CamLock"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 16
titleLabel.BackgroundTransparency = 1
titleLabel.Parent = frame

keybindTextLabel.Name = "KeybindTextLabel"
keybindTextLabel.Size = UDim2.new(1, 0, 0.3, 0)
keybindTextLabel.Position = UDim2.new(0, 0, 0.3, 0)
keybindTextLabel.Text = "Current Key: " .. currentKeybind.Name
keybindTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
keybindTextLabel.Font = Enum.Font.SourceSans
keybindTextLabel.TextSize = 12
keybindTextLabel.BackgroundTransparency = 1
keybindTextLabel.Parent = frame

keybindButton.Name = "KeybindButton"
keybindButton.Size = UDim2.new(0.8, 0, 0.3, 0)
keybindButton.Position = UDim2.new(0.1, 0, 0.6, 0)
keybindButton.Text = "Change Keybind"
keybindButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
keybindButton.TextColor3 = Color3.fromRGB(255, 255, 255)
keybindButton.Font = Enum.Font.SourceSans
keybindButton.TextSize = 12
keybindButton.Parent = frame

-- Function to update the FOV circle position
local function updateFOVCircle()
    local mouse = localPlayer:GetMouse()
    -- Convert mouse position to 3D world space
    local mouseUnitRay = camera:ScreenPointToRay(mouse.X, mouse.Y) -- Ray from camera through mouse
    local worldPoint = mouseUnitRay.Origin + mouseUnitRay.Direction * 10 -- Project into the 3D world (10 studs ahead)

    -- Project the 3D point back to 2D screen coordinates
    local screenPoint, onScreen = camera:WorldToViewportPoint(worldPoint)

    if onScreen then
        fovCircle.Position = Vector2.new(screenPoint.X, screenPoint.Y) -- Place the circle at the screen's calculated 2D point
    else
        fovCircle.Visible = false -- Hide the circle if the mouse isn't pointing at anything visible
    end
end

-- Function to get the closest player to the mouse within the FOV circle
local function getClosestPlayerToMouse()
    local mouse = localPlayer:GetMouse()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local character = player.Character
            local humanoidRootPart = character.HumanoidRootPart
            local screenPosition, onScreen = camera:WorldToViewportPoint(humanoidRootPart.Position)

            if onScreen then
                local mousePosition = Vector2.new(mouse.X, mouse.Y)
                local distance = (mousePosition - Vector2.new(screenPosition.X, screenPosition.Y)).Magnitude
                if distance < shortestDistance and distance <= fovCircle.Radius then
                    shortestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end

    return closestPlayer
end

-- Function to toggle camera lock
local function toggleCamLock()
    if camLockEnabled then
        camLockEnabled = false
        camera.CameraSubject = localPlayer.Character or localPlayer
        print("Camera lock disabled.")
    else
        targetPlayer = getClosestPlayerToMouse()

        if targetPlayer then
            camLockEnabled = true
            print("Camera locked on to: " .. targetPlayer.Name)
        else
            print("No valid target found within FOV.")
        end
    end
end

-- Listen for key press to toggle camera lock
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == currentKeybind then
        toggleCamLock()
    end
end)

-- Change the keybind for CamLock
keybindButton.MouseButton1Click:Connect(function()
    keybindTextLabel.Text = "Press a key to set the new keybind"
    
    -- Wait for the user to press a key
    UserInputService.InputBegan:Wait()
    
    local input = UserInputService.InputBegan:Wait()
    
    if input.UserInputType == Enum.UserInputType.Keyboard then
        currentKeybind = input.KeyCode
        keybindTextLabel.Text = "Current Key: " .. currentKeybind.Name
    end
end)

-- Update camera position and FOV circle when locked
RunService.RenderStepped:Connect(function()
    updateFOVCircle()

    if camLockEnabled and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetPart = targetPlayer.Character.HumanoidRootPart
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetPart.Position)
    end
end)

-- Clean up the FOV circle on script destruction
game:BindToClose(function()
    fovCircle:Remove()
end)
