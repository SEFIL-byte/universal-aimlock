local Toggle = Tab:CreateToggle({
    Name = "CamLock",  -- Renamed to CamLock for clarity
    CurrentValue = false,
    Flag = "Toggle",  -- Flag for configuration saving
    Callback = function(Value)
        -- The value is a boolean: true if enabled, false if disabled
        if Value then
            -- Enable CamLock
            camLockEnabled = true
            print("CamLock Enabled.")
        else
            -- Disable CamLock
            camLockEnabled = false
            print("CamLock Disabled.")
        end
    end,
})

-- Assuming the rest of the CamLock script you already have remains the same

local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local localPlayer = Players.LocalPlayer
local camera = workspace.CurrentCamera

local targetPlayer = nil
local camLockEnabled = false

-- FOV Circle setup
local fovCircle = Drawing.new("Circle")
fovCircle.Color = Color3.new(1, 1, 1) -- White
fovCircle.Thickness = 2
fovCircle.Radius = 100 -- Adjust the radius as needed
fovCircle.Visible = true
fovCircle.Transparency = 1

-- Function to update the FOV circle position
local function updateFOVCircle()
    local mouse = localPlayer:GetMouse()
    local mouseUnitRay = camera:ScreenPointToRay(mouse.X, mouse.Y)
    local worldPoint = mouseUnitRay.Origin + mouseUnitRay.Direction * 10

    local screenPoint, onScreen = camera:WorldToViewportPoint(worldPoint)

    if onScreen then
        fovCircle.Position = Vector2.new(screenPoint.X, screenPoint.Y)
    else
        fovCircle.Visible = false
    end
end

-- Function to get the closest player to the mouse within the FOV circle
local function getClosestPlayerToMouse()
    local mouse = localPlayer:GetMouse()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local character = player.Character
            local humanoidRootPart = character.HumanoidRootPart
            local screenPosition, onScreen = camera:WorldToViewportPoint(humanoidRootPart.Position)

            if onScreen then
                local mousePosition = Vector2.new(mouse.X, mouse.Y)
                local distance = (mousePosition - Vector2.new(screenPosition.X, screenPosition.Y)).Magnitude
                if distance < shortestDistance and distance <= fovCircle.Radius then
                    shortestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end

    return closestPlayer
end

-- Function to toggle camera lock
local function toggleCamLock()
    if camLockEnabled then
        targetPlayer = getClosestPlayerToMouse()

        if targetPlayer then
            print("Camera locked on to: " .. targetPlayer.Name)
        else
            print("No valid target found within FOV.")
        end
    end
end

-- Update camera position and FOV circle when locked
RunService.RenderStepped:Connect(function()
    updateFOVCircle()

    if camLockEnabled and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetPart = targetPlayer.Character.HumanoidRootPart
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetPart.Position)
    end
end)

-- Listen for key press to toggle camera lock
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.T then
        toggleCamLock()
    end
end)
